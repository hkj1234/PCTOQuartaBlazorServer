// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace BlazorServer.Models
{
    public partial class zStage_EF_TestContext : DbContext
    {
        public zStage_EF_TestContext(DbContextOptions<zStage_EF_TestContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Carello> Carello { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Dipendente> Dipendente { get; set; }
        public virtual DbSet<Negozio> Negozio { get; set; }
        public virtual DbSet<Prodotto> Prodotto { get; set; }
        public virtual DbSet<RelazioneNegozioProdotto> RelazioneNegozioProdotto { get; set; }
        public virtual DbSet<Ruolo> Ruolo { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Carello>(entity =>
            {
                entity.HasOne(d => d.IdClienteNavigation)
                    .WithMany(p => p.Carello)
                    .HasForeignKey(d => d.IdCliente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Carello_Cliente");

                entity.HasOne(d => d.IdRelazioneNegozioProdottoNavigation)
                    .WithMany(p => p.Carello)
                    .HasForeignKey(d => d.IdRelazioneNegozioProdotto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Carello_RelazioneNegozioProdotto");
            });

            modelBuilder.Entity<Dipendente>(entity =>
            {
                entity.HasOne(d => d.IdNegozioNavigation)
                    .WithMany(p => p.Dipendente)
                    .HasForeignKey(d => d.IdNegozio)
                    .HasConstraintName("FK_Dipendente_Negozio");

                entity.HasOne(d => d.IdRuoloNavigation)
                    .WithMany(p => p.Dipendente)
                    .HasForeignKey(d => d.IdRuolo)
                    .HasConstraintName("FK_Dipendente_Ruolo");
            });

            modelBuilder.Entity<Negozio>(entity =>
            {
                entity.HasOne(d => d.IdDirettoreNavigation)
                    .WithMany(p => p.NegozioIdDirettoreNavigation)
                    .HasForeignKey(d => d.IdDirettore)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("idDirettore->idDipendente");

                entity.HasOne(d => d.IdResponsabileNavigation)
                    .WithMany(p => p.NegozioIdResponsabileNavigation)
                    .HasForeignKey(d => d.IdResponsabile)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("idResponsabile->idDipendente");
            });

            modelBuilder.Entity<Prodotto>(entity =>
            {
                entity.HasKey(e => e.IdProdotto)
                    .HasName("PK_Prodotti");
            });

            modelBuilder.Entity<RelazioneNegozioProdotto>(entity =>
            {
                entity.HasOne(d => d.IdNegozioNavigation)
                    .WithMany(p => p.RelazioneNegozioProdotto)
                    .HasForeignKey(d => d.IdNegozio)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RelazioneNegozioProdotto_Negozio");

                entity.HasOne(d => d.IdProdottoNavigation)
                    .WithMany(p => p.RelazioneNegozioProdotto)
                    .HasForeignKey(d => d.IdProdotto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RelazioneNegozioProdotto_Prodotto");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}